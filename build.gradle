buildscript {
    ext.kotlinVersion = '1.4.10'
    ext.coroutinesVersion = '1.3.7'
    ext.protobufPlugInVersion = '0.8.12'
    ext.protobufVersion = '3.12.2'
    ext.grpcVersion = '1.29.0'
    ext.grpcKotlinVersion = '0.1.3'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobufPlugInVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}


plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
    id "com.google.protobuf" version "0.8.15"
    id 'idea'
    id 'application'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

def ktor_version = '1.5.2'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    implementation "com.google.protobuf:protobuf-java:$protobufVersion"
    implementation "com.google.protobuf:protobuf-java-util:$protobufVersion"
    implementation "io.grpc:grpc-netty-shaded:$grpcVersion"
    implementation "io.grpc:grpc-protobuf:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation "io.grpc:grpc-kotlin-stub:$grpcKotlinVersion"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.4.3'
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-jackson:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-serialization:$ktor_version"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.github.TitoGrine:LAPD_Project:1.0.2'

}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }

        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                // Generate Java gRPC classes
                grpc { }
                // Generate Kotlin gRPC using the custom plugin from library
                grpckt { }
            }
        }
    }
}

task startGRPCServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.grpc.server.ServerLauncher'
    args '8808'
    standardInput = System.in
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/java")
        sourceDirs += file("${projectDir}/src/generated/grpc")
        sourceDirs += file("${projectDir}/src/generated/grpckt")
    }
}

application{
    mainClass = 'org.feup.lapd.middleware.GRpcExample'
}